#include <stdio.h>
#include <pthread.h>

#define NUM_THREADS 3

pthread_mutex_t mutex;

void *threadFunction(void *threadId) {
    int id = *((int *)threadId);
    pthread_mutex_lock(&mutex);
    printf("Thread %d is executing.\n", id);
    pthread_mutex_unlock(&mutex);
    pthread_exit(NULL);
}

int main() {
    pthread_t threads[NUM_THREADS];
    pthread_mutex_init(&mutex, NULL);
    int threadIds[NUM_THREADS] = {1, 2, 3};
    for (int i = 0; i < NUM_THREADS; ++i)
        pthread_create(&threads[i], NULL, threadFunction, (void *)&threadIds[i]);
    for (int i = 0; i < NUM_THREADS; ++i)
        pthread_join(threads[i], NULL);
    pthread_mutex_destroy(&mutex);
    return 0;
}
