#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t m, w;
int r = 0;

void *rdr(void *_) {
    while (1) {
        sem_wait(&m); r++;
        if (r == 1) sem_wait(&w);
        sem_post(&m);
        printf("Reading...\n");
        sem_wait(&m); r--;
        if (r == 0) sem_post(&w);
        sem_post(&m);
    }
}

void *wrt(void *_) {
    while (1) {
        sem_wait(&w);
        printf("Writing...\n");
        sem_post(&w);
    }
}

int main() {
    sem_init(&m, 0, 1); sem_init(&w, 0, 1);
    pthread_t r[2], wr[2];
    for (int i = 0; i < 2; ++i) {
        pthread_create(&r[i], NULL, rdr, NULL);
        pthread_create(&wr[i], NULL, wrt, NULL);
    }
    for (int i = 0; i < 2; ++i) {
        pthread_join(r[i], NULL);
        pthread_join(wr[i], NULL);
    }
    sem_destroy(&m); sem_destroy(&w);
    return 0;
}
